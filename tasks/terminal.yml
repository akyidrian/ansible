- name: Install terminal prerequisites
  apt:
    name:
      - git
      - python3-pip
      - unzip
    state: present
  become: true

- name: Install gnome-terminal
  apt:
    name: gnome-terminal
    state: present
  become: true

- name: Set default terminal to gnome-terminal
  alternatives:
    name: x-terminal-emulator
    path: /usr/bin/gnome-terminal
    link: /usr/bin/x-terminal-emulator
  become: true

- name: Clone gogh repository
  git:
    repo: https://github.com/Gogh-Co/Gogh.git
    dest: /tmp/gogh
    depth: 1
    force: true
    version: master

- name: Install gogh dependencies
  apt:
    name:
      - dconf-cli
    state: present
  become: true

# FIXME: We assume this task just works without checking. We rely on
# .gnome-terminal.dconf (during the later `dconf load` task) to
# properly select the new theme profile.
- name: Install tokyo night theme profile
  shell: /tmp/gogh/installs/tokyo-night.sh
  environment:
    TERMINAL: gnome-terminal
  become: true
  become_user: "{{ effective_user }}"

- name: Ensure the fonts directory exists
  file:
    path: "{{ user_home }}/.local/share/fonts"
    state: directory
    mode: 0755

- name: Download RobotoMono font
  get_url:
    url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/RobotoMono.zip
    dest: "/tmp/RobotoMono.zip"
    mode: 0644

- name: Unzip RobotoMono font archive
  unarchive:
    src: "/tmp/RobotoMono.zip"
    dest: "{{ user_home }}/.local/share/fonts"
    remote_src: true

- name: Update font cache
  shell: fc-cache "{{ user_home }}/.local/share/fonts"
  register: fc_cache_result
  failed_when: fc_cache_result.rc != 0

- name: Ensure RobotoMono font is available
  shell: fc-list | grep -i roboto
  register: fc_list_result
  failed_when: >
    fc_list_result.rc != 0 or
    fc_list_result.stdout_lines | length == 0

# FIXME: We just assume this task works without checking...
- name: Load dconf settings for GNOME terminal
  shell: dconf load /org/gnome/terminal/ < "{{ gt_dconf_full_path }}"
  become_user: "{{ effective_user }}"
  become: true
  vars:
    - gt_dconf_full_path: "{{ user_home }}/.gnome-terminal.dconf"
  when:
    - ansible_virtualization_type != "docker" # no dconf in docker
    - gt_dconf_full_path is file # we need this dotfile

- name: Clone fzf repository
  git:
    repo: https://github.com/junegunn/fzf.git
    dest: "{{ user_home }}/.fzf"
    depth: 1
    force: true
    version: master

- name: Install fzf
  command: "{{ user_home }}/.fzf/install --all"
  register: fzf_install_result
  changed_when: "'+ Added' in fzf_install_result.stdout"

- name: Install terminal tools
  apt:
    name:
      - bat
      - fd-find
      - tmux
    state: present
  become: true

- name: Install tldr terminal tool
  pip:
    name: tldr
    executable: pip3
    state: present
